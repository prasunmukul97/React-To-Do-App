{"version":3,"sources":["logo.svg","components/ListItems.js","components/DeletedItemList.js","components/ItemContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ListItems","props","displayItems","itemList","map","item","className","key","icon","type","value","text","id","onChange","e","inputTextChangeHandler","target","onClick","deleteHandler","DeletedItemList","deletedItemList","length","reAddHandler","delFromTrashHandler","ItemContainer","handleSubmit","preventDefault","newItem","state","todo","setState","items","addItem","Date","now","console","log","newDeletedItem","newList","filter","deletedItems","reAddItem","newDelList","this","onSubmit","placeholder","Component","library","add","faCheckSquare","faTimes","faTrash","faSquare","fas","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ed870137.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nfunction ListItems(props) {\r\n    const itemList=props.itemList;\r\n    const displayItems=itemList.map(item=>{\r\n        return <div className='list' key={item.key}>\r\n                   <p><FontAwesomeIcon icon=\"arrow-right\" className='faiconsBefore'/>\r\n                    <input type='text' value={item.text} id={item.key} onChange={(e)=>props.inputTextChangeHandler(item.key,e.target.value)}/>\r\n                    <FontAwesomeIcon icon=\"trash\" className='faiconsAfter' onClick={()=>props.deleteHandler(item.key,item.text)}/>                           \r\n                    \r\n                    </p>\r\n                </div>\r\n    })\r\n  return (    \r\n    <div>\r\n        {displayItems}\r\n    </div>\r\n  )\r\n}\r\nexport default ListItems\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nfunction DeletedItemList(props) {\r\n    const itemList=props.deletedItemList;  \r\n    const displayItems=itemList.length>0?itemList.map(item=>{\r\n        return <div className='list' key={item.key}>\r\n                   <p> <FontAwesomeIcon icon=\"check-square\" className='faiconsBefore' />\r\n                            <label>{item.text}</label> \r\n                    <FontAwesomeIcon icon=\"redo\" className='faiconsBeforeEnd' onClick={()=>props.reAddHandler(item.key,item.text)}/>              \r\n                    <FontAwesomeIcon icon=\"trash\"  className='faiconsAfter' onClick={()=>props.delFromTrashHandler(item.key,item.text)}/>                           \r\n                   </p>\r\n                </div>\r\n    }):<div>No completed task available..</div>\r\n  return (    \r\n    <div>\r\n        {displayItems}\r\n    </div>\r\n  )\r\n}\r\nexport default DeletedItemList\r\n","import React, { Component } from 'react'\r\nimport ListItems from './ListItems';\r\nimport DeletedItemList from './DeletedItemList';\r\n\r\n class ItemContainer extends Component {\r\n     constructor(props) {\r\n       super(props)\r\n     \r\n       this.state = {\r\n          deletedItems:[],\r\n          items:[],\r\n          todo:{\r\n            text:'',\r\n            key:''\r\n          }\r\n       }\r\n     }\r\n  handleSubmit=(e)=>{\r\n      e.preventDefault();      \r\n      const newItem=this.state.todo;\r\n      if(newItem.text.length>0) {\r\n        this.setState({\r\n            items: [...this.state.items,newItem],\r\n            todo:{\r\n                text:'',\r\n                key:''\r\n            }\r\n          })\r\n      }   \r\n           \r\n  }   \r\n  addItem =(e)=>{\r\n    e.preventDefault();\r\n    let {value}=e.target\r\n    this.setState({\r\n        todo:{\r\n            text:value,\r\n            key:Date.now()\r\n        }\r\n    })\r\n  }\r\n\r\n  deleteHandler =(key,text)=>{\r\n      console.log({text})\r\n      const itemList=this.state.items;\r\n      const newDeletedItem={\r\n                    key,\r\n                    text\r\n            }\r\n      const newList=itemList.filter(item=>{\r\n          if(item.key!==key){\r\n              return item;\r\n          }\r\n      })\r\n      console.log(`deletedItemKey is ${newDeletedItem.key}`)\r\n      this.setState({\r\n          items:newList,\r\n          deletedItems: [...this.state.deletedItems,newDeletedItem],\r\n      },()=>{\r\n        console.log(this.state.deletedItems)\r\n      })\r\n      \r\n  }\r\n  inputTextChangeHandler=(key,text)=>{\r\n      const itemList=this.state.items;\r\n        itemList.map(item=>{\r\n            if(item.key===key){\r\n                item.text=text;\r\n            }\r\n        })\r\n        this.setState({\r\n            items:itemList\r\n        })\r\n  }\r\n\r\n  reAddHandler=(key,text)=>{\r\n      const reAddItem={\r\n          key,\r\n          text\r\n      }\r\n      const deletedItemlist=this.state.deletedItems;\r\n      const newDelList= deletedItemlist.filter(item=>{\r\n          if(item.key!==key){\r\n              return item;\r\n          }\r\n      })\r\n      this.setState({\r\n        deletedItems:newDelList,\r\n        items: [...this.state.items,reAddItem]\r\n      })\r\n\r\n  }\r\n\r\n  delFromTrashHandler=(key,text)=>{\r\n    const deletedItemlist=this.state.deletedItems;\r\n    const newDelList=deletedItemlist.filter(item=>{\r\n        if(item.key!==key){\r\n            return item;\r\n        }\r\n    })\r\n    this.setState({\r\n        deletedItems:newDelList\r\n    })\r\n  }\r\n  render() {\r\n     const {text}=this.state.todo; \r\n    return (\r\n      <div >\r\n        <div className='form-style-2' >\r\n        <div className='form-style-2-heading'>To Do Task</div>\r\n        <form onSubmit={this.handleSubmit}>\r\n            <div>\r\n            <input \r\n                className='input-field'\r\n                type='text' \r\n                value={text} \r\n                placeholder='Enter the todo Item' \r\n                onChange={this.addItem}/><input type=\"submit\" value=\"Add Task\" />                                     \r\n            </div>             \r\n        </form>\r\n        <ListItems itemList={this.state.items} \r\n                    deleteHandler={this.deleteHandler}\r\n                    inputTextChangeHandler={this.inputTextChangeHandler}/> \r\n        <div className='form-style-2-heading2'>Completed Task</div> \r\n        <DeletedItemList deletedItemList={this.state.deletedItems}\r\n                        reAddHandler={this.reAddHandler} \r\n                        delFromTrashHandler={this.delFromTrashHandler}/>         \r\n        </div>        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ItemContainer\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ItemContainer from './components/ItemContainer';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare, faTimes,faTrash,faSquare,fas } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faCheckSquare,faTimes,faTrash,faSquare,fas)\n\n\nfunction App() {\n  return (\n    <div>\n      <h1 className='headerClass'>Plan your today's task</h1>\n      <ItemContainer />  \n      <h5 className='footerClass'>Developed by \"Prasun Saurabh\"</h5>   \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}